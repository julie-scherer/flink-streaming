version: "3.9"
services:
  jobmanager:
    build:
      context: .
      dockerfile: ./Dockerfile
      platforms:
        - "linux/amd64"
        - "linux/arm64"
    image: ${IMAGE_NAME:-pyflink:1.16.0}
    container_name: "${CONTAINER_PREFIX:-eczachly-flink}-jobmanager"
    pull_policy: never
    platform: "linux/amd64"
    hostname: "jobmanager"
    env_file:
      - flink-env.env
    expose:
      - "6123"
    ports:
      - "8081:8081"
    volumes:
      - ./:/opt/flink/usrlib
      - ./keys/:/var/private/ssl/
      - ./job/:/opt/job/
    command: jobmanager 
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - POSTGRES_URL=${POSTGRES_URL:-jdbc:postgresql://host.docker.internal:5432/postgres}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager

  taskmanager:
    image: ${IMAGE_NAME:-pyflink:1.16.0}
    container_name: "${CONTAINER_PREFIX:-eczachly-flink}-taskmanager"
    pull_policy: never
    platform: "linux/amd64"
    scale: 1
    env_file:
      - flink-env.env
    expose:
      - "6121"
      - "6122"
    volumes:
      - ./:/opt/flink/usrlib
      - ./keys/:/var/private/ssl/
      - ./job/:/opt/job/
    depends_on:
      - jobmanager
    links:
      - jobmanager:jobmanager
    command: taskmanager
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        parallelism.default: 2

  postgres:
    image: postgres:15
    container_name: "${CONTAINER_PREFIX:-eczachly-flink}-postgres"
    restart: on-failure
    env_file:
      - flink-env.env
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./sql/create_role.sql:/docker-entrypoint-initdb.d/create_role.sql
      - ./sql/create_table.sql:/docker-entrypoint-initdb.d/create_table.sql
      - ./sql/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
  